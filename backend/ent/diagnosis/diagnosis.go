// Code generated by entc, DO NOT EDIT.

package diagnosis

const (
	// Label holds the string label denoting the diagnosis type in the database.
	Label = "diagnosis"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"

	// EdgeDiagnosis holds the string denoting the diagnosis edge name in mutations.
	EdgeDiagnosis = "diagnosis"

	// Table holds the table name of the diagnosis in the database.
	Table = "diagnoses"
	// DiagnosisTable is the table the holds the diagnosis relation/edge. The primary key declared below.
	DiagnosisTable = "doctor_DoctorToDiagnosis"
	// DiagnosisInverseTable is the table name for the Doctor entity.
	// It exists in this package in order to avoid circular dependency with the "doctor" package.
	DiagnosisInverseTable = "doctors"
)

// Columns holds all SQL columns for diagnosis fields.
var Columns = []string{
	FieldID,
}

var (
	// DiagnosisPrimaryKey and DiagnosisColumn2 are the table columns denoting the
	// primary key for the diagnosis relation (M2M).
	DiagnosisPrimaryKey = []string{"doctor_id", "diagnosis_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
